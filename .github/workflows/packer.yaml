name: Pack Docker Image
on:
  workflow_dispatch:
    inputs:
      UID:
        description: "User ID"
        required: true
        type: number
        default: 1000
      GID:
        description: "Group ID"
        required: true
        type: number
        default: 1000
      TML_VERSION:
        description: "Template Version"
        required: true
        type: string
      PLATFORM:
        description: "Docker build platform (e.g., amd64, aarch64)"
        required: true
        type: string
        default: "amd64"

jobs:
  Build-Docker-Image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Define variables
        run: |
          TAG_NAME="${{ github.event.inputs.TML_VERSION }}-uid${{ github.event.inputs.UID }}-gid${{ github.event.inputs.GID }}-${{ github.event.inputs.PLATFORM }}"
          IMAGE_NAME="snowind/tml:${TAG_NAME}"
          FILE_NAME="tml-${TAG_NAME}.tar"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "FILE_NAME=${FILE_NAME}" >> $GITHUB_ENV

      - name: Print variables
        run: |
          echo "TAG_NAME: ${{ env.TAG_NAME }}"
          echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"
          echo "FILE_NAME: ${{ env.FILE_NAME }}"

      - name: Build image
        run: |
          export DOCKER_BUILDKIT=1
          docker buildx build --platform ${{ github.event.inputs.PLATFORM }} \
            -t ${{ env.IMAGE_NAME }} \
            --build-arg UID=${{ github.event.inputs.UID }} \
            --build-arg GID=${{ github.event.inputs.GID }} \
            --build-arg TML_VERSION=${{ github.event.inputs.TML_VERSION }} .

      - name: Save image to tar
        run: docker save -o ./${{ env.FILE_NAME }} ${{ env.IMAGE_NAME }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: "v${{ env.TAG_NAME }}"
          body: "This release was generated by @${{ github.actor }}"
          artifacts: "./${{ env.FILE_NAME }}"
          generateReleaseNotes: true